---
layout: post
title: "[GitHub] 09. 소스트리 활용법 - rebase"
date: 2022-02-09 15:20:23 +0900
category: github
---

# 1. rebase란?

rebase는 말 그대로 베이스(branch)를 재배치한다는 뜻입니다.

merge를 사용하면 히스토리를 봤을 때 뿌리가 여러개로 나누게 되고, branch가 매울 많은 상황이라면 히스토리를 깔끔하게 보기가 어렵습니다.

이럴 때 rebase로 베이스를 다시 정의함으로써 새로 커밋 라인을 정리하여 히스토리를 깔끔하게 볼 수 있게 해줍니다.

# 2. rebase와 merge의 차이점

![alt text](/public/img/github_57.png)

이렇게 master 브랜치의 커밋4, testBranch의 커밋3가 있습니다.

커밋3와 커밋4를 merge, rebase를 할 경우 아래와 같은 그림이 됩니다.

<br>

![alt text](/public/img/github_58.png)

merge는 이렇게 새로운 커밋이 생깁니다.

같은 브랜치로 합쳐졌는데, 커밋 히스토리를 볼 때 위와 같이 나누어져있어 히스토리를 보기가 어려워집니다.

<br>

![alt text](/public/img/github_59.png)

rebase는 이렇게 하나의 브랜치로 합쳐집니다.

히스토리가 깔끔해졌음을 알 수 있습니다.

# 3. 소스트리로 rebase 실습

![alt text](/public/img/github_60.png)

테스트를 위해 다음과 같이 rebaseBranch를 만들었고, rebaseBranch와 master브랜치 둘 다에서 각각 커밋을 해주었습니다.

이 두 커밋을 rebase를 이용해서 합치는 작업을 해보겠습니다.

1. rebaseBranch에 체크아웃

1. master 브랜치를 우클릭 후, '현재 변경사항을 master에 재배치' 클릭

   이렇게 하나의 브랜치로 깔끔하게 커밋되었습니다.

1. master 로 체크아웃

1. rebaseBranch와 master병합(fast-forward)

   ![alt text](/public/img/github_61.png)