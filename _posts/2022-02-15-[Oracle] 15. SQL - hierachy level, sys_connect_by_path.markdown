---
layout: post
title: "[Oracle] 15. SQL - hierachy hierachy level, sys_connect_by_path"
date: 2022-02-15 16:00:00 +0900
category: oracle
---

# 1. level

level은 노드의 단계를 표시한다.

start with절 조건을 만족하는 노드의 레빌이 1이 되고, 하위는 level2, 또 그 하위는 level3 이 된다.

### linkT

| id | nextId |
| 1 | 2 |
| 2 | 3 |
| 3 | 4 |
| 3 | 5 |
| 4 | 6 |
| 5 | 7 |
| 7 | 8 |
| 8 | 9 |


id가 1행 부터, 상위 nextId = 하위 id로 계층 구조를 형성한다.

```sql
select id,
       nextId,
       level,
       sys_connect_by_path(to_char(id), ',') as path
from   linkT
start with id = 1
connect by prior nextId = id
```

### 출력결과

| id | nextId | level | path |
| :--- | :--- | :--- | :--- |
| 1 | 2 | 1 | ,1 |
| 2 | 3 | 2 | ,1,2 |
| 3 | 4 | 3 | ,1,2,3 |
| 4 | 6 | 4 | ,1,2,3,4 |
| 3 | 5 | 3 | ,1,2,3 |
| 5 | 7 | 4 | ,1,2,3,5 |
| 7 | 8 | 5 | ,1,2,3,5,7 |
| 8 | 9 | 6 | ,1,2,3,5,7,8 |


level 3 만 조회되게끔 where 조건에 아래와 같이 추가해보자

```sql
select id,
       nextId,
       level,
       sys_connect_by_path(to_char(id), ',') as path
from   linkT
start with id = 1
connect by prior nextId = id
and    level <= 3;
```

### 출력결과

| id | nextId | level | path |
| 1 | 2 | 1 | ,1 |
| 2 | 3 | 2 | ,1,2 |
| 3 | 4 | 3 | ,1,2,3 |
| 3 | 5 | 3 | ,1,2,3 |


# 2. sys_connect_by_path함수

해당 함수는 시작점 부터 경로를 표시한다.

```sql
select id,
       nextId,
       level,
       sys_connect_by_path(to_char(id), ',') as path
from   linkT
start  with id = 1
connect by prior nextId = id;
```

### 출력결과

| id | nextId | level | path |
| :--- | :--- | :--- | :--- |
| 1 | 2 | 1 | ,1 |
| 2 | 3 | 2 | ,1,2 |
| 3 | 4 | 3 | ,1,2,3 |
| 4 | 6 | 4 | ,1,2,3,4 |
| 3 | 5 | 3 | ,1,2,3 |
| 5 | 7 | 4 | ,1,2,3,5 |
| 7 | 8 | 5 | ,1,2,3,5,7 |
| 8 | 9 | 6 | ,1,2,3,5,7,8 |

# 3. order silblings by

siblings 는 영어로 형제를 의미한다.

order sibling by 를 하면 계층을 유지하면서 정렬을 할 수 있다.

### siblingsT

| id | parentId |
| :--- | :--- |
| 1 | null |
| 2 | 1 |
| 3 | 1 |
| 4 | 1 |
| 5 | 3 |
| 6 | 3 |
| 7 | 4 |
| 8 | 4 |
| 9 | 6 |
| 10 | 7 |
| 20 | null |
| 21 | 20 |
| 22 | 20 |
| 23 | 21 |
| 24 | 21|

```sql
select connect_by_root id as treeId,
       id,
       parentId,
       level,
       sys_connect_by_path(to_char(id), ',') as path
from   siblingsT
start with parentId is null
connect by prior id = parentId
order siblings by id desc;
```

### 출력결과

| treeId | id | parentId | level | path |
| :--- | :--- | :--- | :--- | :--- |
| 20 | 20 | null | 1 | ,20 |
| 20 | 22 | 20 | 2 | ,20,22 |
| 20 | 21 | 20 | 2 | ,20,21 |
| 20 | 24 | 21 | 3 | ,20,21,24 |
| 20 | 23 | 21 | 3 | ,20,21,23 |
| 1 | 1 | null | 1 | ,1 |
| 1 | 4 | 1 | 2 | ,1,4 |
| 1 | 8 | 4 | 3 | ,1,4,8 |
| 1 | 7 | 4 | 3 | ,1,4,7 |
| 1 | 10 | 7 | 4 | ,1,4,7,10 |
| 1 | 3 | 1 | 2 | ,1,3 |
| 1 | 6 | 3 | 3 | ,1,3,6 |
| 1 | 9 | 6 | 4 | ,1,3,6,9 |
| 1 | 5 | 3 | 3 | ,1,3,5 |
| 1 | 2 | 1 | 2 | ,1,2 |